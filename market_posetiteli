/*
#include <bits/stdc++.h>

using namespace std;

//idejata od chas
//po vaznost: licna karta, pasosh, vozacka (kako ke se zemaat vo redot)

int main()
{
    int n;
    cin>>n;
    string ime,prezime;
    int licna_karta,pasosh,vozacka;
    priority_queue<pair<int,string> > pq;

    for(int i=0 ; i<n ; i++)
    {
        cin>>ime>>prezime;
        cin>>licna_karta>>pasosh>>vozacka;
        pq.push({licna_karta*4 + pasosh*2 + vozacka, ime+" "+prezime});
    }

    while(!pq.empty())
    {
        auto next=pq.top();
        pq.pop();
        string lice=next.second;
        cout<<lice<<endl;
    }

    return 0;
}
*/

#include <bits/stdc++.h>

using namespace std;

//zadachata kako vo orginalniot tekst

int main()
{
    int n;
    cin>>n;
    string ime[n], prezime[n];
    int a[n], b[n], c[n];
    queue<pair<string,int> > q1,q2,q3;
    for(int i=0 ; i<n ; i++)
    {
        cin>>ime[i]>>prezime[i];
        cin>>a[i]>>b[i]>>c[i];
        if(a[i]==1)
            q1.push({ime[i]+" "+prezime[i], i});

        else if(b[i]==1)
            q2.push({ime[i]+" "+prezime[i], i});

        else if(c[i]==1)
            q3.push({ime[i]+" "+prezime[i], i});
    }
    while(!q1.empty())
    {
        auto next=q1.front();
        q1.pop();

        string lice=next.first;
        int i=next.second;

        //ako ne treba pak da ceka
        if(b[i]==0 && c[i]==0)
            cout<<lice<<endl;

        a[i]=0;

        if(b[i]==1)
            q2.push({lice, i});

        if(c[i]==1 && b[i]==0)
            q3.push({lice,i});
    }

    while(!q2.empty())
    {
        auto next=q2.front();
        q2.pop();

        string lice=next.first;
        int i=next.second;

        if(a[i]==0 && c[i]==0)
            cout<<lice<<endl;
        b[i]=0;

        if(c[i]==1)
            q3.push({lice, i});
    }

    while(!q3.empty())
    {
        auto next=q3.front();
        q3.pop();

        string lice=next.first;
        int i=next.second;

        if(a[i]==0 && b[i]==0)
            cout<<lice<<endl;
        c[i]=0;
    }

    return 0;
}

